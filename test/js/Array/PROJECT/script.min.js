"use strict";class Helper{on(e,t,n){t.addEventListener(e,n)}}class Bankist extends Helper{constructor(){super(),this.accounts=[{owner:"Jonas Schmedtmann",movements:[200,450,-400,3e3,-650,-130,70,1300],interestRate:1.2,pin:1111},{owner:"Jessica Davis",movements:[5e3,3400,-150,-790,-3210,-1e3,8500,-30],interestRate:1.5,pin:2222},{owner:"Steven Thomas Williams",movements:[200,-200,340,-300,-20,50,400,-460],interestRate:.7,pin:3333},{owner:"Sarah Smith",movements:[430,1e3,700,50,90],interestRate:1,pin:4444},],this.sorted=!0,this.setupAccounts(),this.login()}DOM(){let e=e=>document.querySelector(e);return{labelWelcome:e(".welcome"),labelDate:e(".date"),labelBalance:e(".balance__value"),labelSumIn:e(".summary__value--in"),labelSumOut:e(".summary__value--out"),labelSumInterest:e(".summary__value--interest"),labelTimer:e(".timer"),containerApp:e(".app"),containerMovements:e(".movements"),btnLogin:e(".login__btn"),btnTransfer:e(".form__btn--transfer"),btnLoan:e(".form__btn--loan"),btnClose:e(".form__btn--close"),btnSort:e(".btn--sort"),inputLoginUsername:e(".login__input--user"),inputLoginPin:e(".login__input--pin"),inputTransferTo:e(".form__input--to"),inputTransferAmount:e(".form__input--amount"),inputLoanAmount:e(".form__input--loan-amount"),inputCloseUsername:e(".form__input--user"),inputClosePin:e(".form__input--pin")}}setupAccounts(){this.accounts.forEach((e,t)=>{e.username=e.owner.split(" ").map(e=>e.charAt(0)).join("").toLowerCase(),e.id=t})}login(){this.on("click",this.DOM().btnLogin,e=>{e.preventDefault();let t=this.DOM().inputLoginUsername.value,n=this.DOM().inputLoginPin.value,s=this.accounts.find(e=>e.username===t&&e.pin===Number(n));if(!s)return alert("Invalid Credentials"),!1;this.activeUser=s,this.render(),this.sort(),this.deposit(),this.withdraw(),this.deactivate()})}render(e=!1){this.DOM().containerMovements.innerHTML="",this.DOM().containerApp.style.opacity="1",this.DOM().labelWelcome.textContent="Welcome "+this.activeUser.owner;let t=e?this.activeUser.movements.slice().sort((e,t)=>e<t?1:-1):this.activeUser.movements,n=t.map((e,t)=>{let n=e>0?"deposit":"withdrawal";return`<div class="movements__row">
                        <div class="movements__type movements__type--${n}">
                            ${++t} ${n}
                        </div>
                        <div class="movements__date">...</div>
                        <div class="movements__value">$${Math.abs(e)}</div>
                    </div>`}).join("");this.DOM().containerMovements.insertAdjacentHTML("afterbegin",n),this.DOM().labelBalance.textContent="$"+this.activeUser.movements.reduce((e,t)=>e+t),this.DOM().labelSumIn.textContent="$"+this.activeUser.movements.filter(e=>e>0).reduce((e,t)=>e+t),this.DOM().labelSumOut.textContent="$"+Math.abs(this.activeUser.movements.filter(e=>e<0).reduce((e,t)=>e+t)),this.DOM().labelSumInterest.textContent="$"+this.activeUser.movements.filter(e=>e>0).map(e=>1.2*e/100).filter(e=>e>=1).reduce((e,t)=>e+t)}sort(){this.on("click",this.DOM().btnSort,()=>{this.render(this.sorted),this.sorted=!this.sorted})}deactivate(){this.on("click",this.DOM().btnClose,e=>{e.preventDefault();let t=this.DOM().inputCloseUsername.value,n=+this.DOM().inputClosePin.value;this.activeUser.pin===n&&this.activeUser.username===t?(this.accounts.splice(this.activeUser.id,1),this.DOM().containerApp.style.opacity="0",this.DOM().labelWelcome.textContent="Please login to access your account",alert("Account has been deleted!"),this.DOM().inputCloseUsername.value=this.DOM().inputClosePin.value=""):alert("Wrong credential!")})}withdraw(){this.on("click",this.DOM().btnTransfer,e=>{e.preventDefault();let t=this.DOM().inputTransferTo.value,n=+this.DOM().inputTransferAmount.value,s=this.accounts.find(e=>e.username===t);if(!s||n<0)return!1;let i=this.activeUser.movements.reduce((e,t)=>e+t);if(n>i)return alert("Insufficient balance!"),alert("Feel free to take loan \uD83D\uDE01"),!1;s.movements.push(n),this.activeUser.movements.push(-n),this.render()})}deposit(){this.on("click",this.DOM().btnLoan,e=>{e.preventDefault();let t=+this.DOM().inputLoanAmount.value,n=this.activeUser.movements.reduce((e,t)=>e+t);.1*n<t&&(this.activeUser.movements.push(Math.abs(t)),this.render(),this.DOM().inputLoanAmount.value="")})}}new Bankist;